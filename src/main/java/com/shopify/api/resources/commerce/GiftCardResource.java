package com.shopify.api.resources.commerce;

import com.shopify.api.ApiContext;
import com.shopify.api.contracts.giftcard.GiftCard;
import com.shopify.api.contracts.giftcard.GiftCardCollection;
import com.shopify.api.contracts.giftcard.GiftCardRequest;
import com.shopify.api.contracts.giftcard.GiftCardResponse;
import com.shopify.api.model.Count;
import com.shopify.client.ShopifyClient;

/**
 * @author Rahul Tiwari, Created on Aug 21, 2019 - 4:01:32 PM
 *
 */
public class GiftCardResource {

	private ApiContext _apiContext;

	public GiftCardResource(ApiContext apiContext) {
		_apiContext = apiContext;
	}

	/**
	 * Retrieves a list of gift cards.
	 * 
	 * @return List of {@link GiftCard}
	 * @throws Exception
	 */
	public GiftCardCollection getGiftCards() throws Exception {

		ShopifyClient<GiftCardCollection> client = GiftCardResourceClient.getGiftCards();
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();
	}

	/**
	 * Retrieves a list of gift cards by Status(enable/disable).
	 * 
	 * @param status - enable/disable
	 * @return List of {@link GiftCard}
	 * @throws Exception
	 */
	public GiftCardCollection getGiftCardsByStatus(String status) throws Exception {
		ShopifyClient<GiftCardCollection> client = GiftCardResourceClient.getGiftCardsByStatus(status);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();
	}

	/**
	 * Searches for gift cards.
	 * 
	 * @param limit  - The maximum number of results to retrieve. (default: 50,
	 *               maximum: 250)
	 * @param order  - The field and direction to order results by. (default:
	 *               disabled_at DESC)
	 * @param query  - The text to search for. <a href=
	 *               "https://help.shopify.com/en/api/getting-started/search-syntax">Search
	 *               Syntax</a>
	 * @param fields - Show only certain fields, specified by a comma-separated list
	 *               of field names.
	 * @return List of {@link GiftCard}
	 * @throws Exception
	 */
	public GiftCardCollection getGiftCards(Integer limit, String order, String query, String fields) throws Exception {

		ShopifyClient<GiftCardCollection> client = GiftCardResourceClient.getGiftCards(limit, order, query, fields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();
	}

	/**
	 * Retrieves a single gift card.
	 * 
	 * @param giftCardId
	 * @return {@link GiftCard}
	 * @throws Exception
	 */
	public GiftCardResponse getGiftCard(long giftCardId) throws Exception {
		ShopifyClient<GiftCardResponse> client = GiftCardResourceClient.getGiftCard(giftCardId);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();
	}

	/**
	 * Retrieves a count of gift cards.
	 * 
	 * @return {@link Count}
	 * @throws Exception
	 */
	public Count getGiftCardCount() throws Exception {
		ShopifyClient<Count> client = GiftCardResourceClient.getGiftCardCount();
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();
	}

	/**
	 * Retrieve a count gift cards by status (enable/disable)
	 * 
	 * @param status - enable/disable
	 * @return {@link Count}
	 * @throws Exception
	 */
	public Count getGiftCardCountByStatus(String status) throws Exception {
		ShopifyClient<Count> client = GiftCardResourceClient.getGiftCardCountByStatus(status);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();
	}

	/**
	 * Create a gift card with custom data.
	 * 
	 * @param cardRequest - {@link GiftCard}
	 * @return {@link GiftCard}
	 * @throws Exception
	 */
	public GiftCardResponse createGiftCard(GiftCardRequest cardRequest) throws Exception {
		ShopifyClient<GiftCardResponse> client = GiftCardResourceClient.createGiftCard();
		client.setContext(_apiContext);
		client.setBody(cardRequest);
		client.executeRequest();
		return client.getResult();
	}

	/**
	 * Create a gift card with an automatically generated code.
	 * 
	 * @param giftCard - {@link GiftCard}
	 * @return {@link GiftCard}
	 * @throws Exception
	 */
	public GiftCardResponse createGiftCardWithAutoGeneratedCode(GiftCard giftCard) throws Exception {
		ShopifyClient<GiftCardResponse> client = GiftCardResourceClient.createGiftCardWithAutoGeneratedCode();
		client.setContext(_apiContext);
		client.setBody(giftCard);
		client.executeRequest();
		return client.getResult();
	}

	/**
	 * Updates an existing gift card. The gift card's balance can't be changed via
	 * the API. You can change only the expiry date, note, and template suffix.
	 * 
	 * @param giftCardUpdateRequest   - {@link GiftCard}
	 * @param giftCardId - Gift card Id (Shopify)
	 * @return {@link GiftCard}
	 * @throws Exception
	 */
	public GiftCardResponse updateGiftCard(GiftCardRequest giftCardUpdateRequest, String giftCardId) throws Exception {
		ShopifyClient<GiftCardResponse> client = GiftCardResourceClient.updateGiftCard(giftCardId);
		client.setContext(_apiContext);
		client.setBody(giftCardUpdateRequest);
		client.executeRequest();
		return client.getResult();
	}

	/**
	 * Disables a gift card. Disabling a gift card can't be undone.
	 * @param giftCardDisableRequest 
	 * 
	 * @param giftCardId
	 * @return {@link GiftCard}
	 * @throws Exception
	 */
	public GiftCard disableGiftCard(GiftCardRequest giftCardDisableRequest, long giftCardId) throws Exception {
		ShopifyClient<GiftCard> client = GiftCardResourceClient.disableGiftCard(giftCardId);
		client.setContext(_apiContext);
		client.setBody(giftCardDisableRequest);
		client.executeRequest();
		return client.getResult();
	}

}
